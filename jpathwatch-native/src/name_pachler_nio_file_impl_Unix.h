/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class name_pachler_nio_file_impl_Unix */

#ifndef _Included_name_pachler_nio_file_impl_Unix
#define _Included_name_pachler_nio_file_impl_Unix
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: EINTR */
/* Inaccessible static: EINVAL */
/* Inaccessible static: EBADF */
/* Inaccessible static: ENOENT */
/* Inaccessible static: O_RDONLY */
/* Inaccessible static: O_WRONLY */
/* Inaccessible static: O_RDWR */
/* Inaccessible static: O_APPEND */
/* Inaccessible static: O_CREAT */
/* Inaccessible static: O_EXCL */
/* Inaccessible static: O_NOCTTY */
/* Inaccessible static: O_NONBLOCK */
/* Inaccessible static: O_SYNC */
/* Inaccessible static: O_TRUNC */
/* Inaccessible static: S_ISUID */
/* Inaccessible static: S_ISGID */
/* Inaccessible static: S_IRWXU */
/* Inaccessible static: S_IRUSR */
/* Inaccessible static: S_IWUSR */
/* Inaccessible static: S_IXUSR */
/* Inaccessible static: S_IRWXG */
/* Inaccessible static: S_IRGRP */
/* Inaccessible static: S_IWGRP */
/* Inaccessible static: S_IXGRP */
/* Inaccessible static: S_IRWXO */
/* Inaccessible static: S_IROTH */
/* Inaccessible static: S_IWOTH */
/* Inaccessible static: S_IXOTH */
/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    getIntDefine
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_getIntDefine
  (JNIEnv *, jclass, jstring);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    open
 * Signature: (Ljava/lang/String;II)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_open
  (JNIEnv *, jclass, jstring, jint, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    close
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_close
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    select
 * Signature: ([I[I[IJ)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_select
  (JNIEnv *, jclass, jintArray, jintArray, jintArray, jlong);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    ioctl_FIONREAD
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_ioctl_1FIONREAD
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    read
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_read
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    write
 * Signature: (I[BI)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_write
  (JNIEnv *, jclass, jint, jbyteArray, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    pipe
 * Signature: ([I)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_pipe
  (JNIEnv *, jclass, jintArray);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    errno
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_errno
  (JNIEnv *, jclass);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    strerror
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_name_pachler_nio_file_impl_Unix_strerror
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    S_ISREG
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_name_pachler_nio_file_impl_Unix_S_1ISREG
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    S_ISDIR
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_name_pachler_nio_file_impl_Unix_S_1ISDIR
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    S_ISCHR
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_name_pachler_nio_file_impl_Unix_S_1ISCHR
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    S_ISBLK
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_name_pachler_nio_file_impl_Unix_S_1ISBLK
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    S_ISFIFO
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_name_pachler_nio_file_impl_Unix_S_1ISFIFO
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    S_ISLNK
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_name_pachler_nio_file_impl_Unix_S_1ISLNK
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    S_ISSOCK
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_name_pachler_nio_file_impl_Unix_S_1ISSOCK
  (JNIEnv *, jclass, jint);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    stat
 * Signature: (Ljava/lang/String;Lname/pachler/nio/file/impl/Unix$stat;)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_stat
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    lstat
 * Signature: (Ljava/lang/String;Lname/pachler/nio/file/impl/Unix$stat;)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_lstat
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     name_pachler_nio_file_impl_Unix
 * Method:    symlink
 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_name_pachler_nio_file_impl_Unix_symlink
  (JNIEnv *, jclass, jstring, jstring);

#ifdef __cplusplus
}
#endif
#endif
